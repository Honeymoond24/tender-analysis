# Settings and configurations that are common for all containers
x-minio-common: &minio-common
  image: quay.io/minio/minio:RELEASE.2024-08-03T04-33-23Z
  restart: unless-stopped
  command: server --console-address ":9001" http://minio{1...4}/data{1...2}
  expose:
    - "9000"
    - "9001"
  env_file:
    - .env
  healthcheck:
    test: [ "CMD", "mc", "ready", "local" ]
    interval: 5s
    timeout: 5s
    retries: 5

# starts 4 docker containers running minio server instances.
# using nginx reverse proxy, load balancing, you can access
# it through port 9000.
services:
  minio1:
    <<: *minio-common
    hostname: minio1
    volumes:
      - ./docker/volumes/data1-1:/data1
      - ./docker/volumes/data1-2:/data2

  minio2:
    <<: *minio-common
    hostname: minio2
    volumes:
      - ./docker/volumes/data2-1:/data1
      - ./docker/volumes/data2-2:/data2

  minio3:
    <<: *minio-common
    hostname: minio3
    volumes:
      - ./docker/volumes/data3-1:/data1
      - ./docker/volumes/data3-2:/data2

  minio4:
    <<: *minio-common
    hostname: minio4
    volumes:
      - ./docker/volumes/data4-1:/data1
      - ./docker/volumes/data4-2:/data2

  analytics:
    container_name: "analytics"
    restart: unless-stopped
    build:
      context: .
      dockerfile: Dockerfile
    logging: &logging
      driver: json-file
      options:
        max-size: "32m"
        max-file: "3"

  db:
    image: postgres:15.3
    container_name: "postgres"
    restart: unless-stopped
    volumes:
      - ./docker/volumes/postgres_data:/var/lib/postgresql/data
    env_file:
      - .env
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5
    logging: *logging

  redis:
    image: redis:7.4-alpine
    container_name: "redis"
    restart: unless-stopped
    env_file:
      - .env
    ports:
      - "6379:6379"
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 8s
      timeout: 3s
      retries: 3

  redis-insight:
    image: redis/redisinsight:latest
    container_name: "redis-insight"
    restart: unless-stopped
    volumes:
      - ./docker/volumes/redis-insight/data:/data
    ports:
      - "5540:5540"
    logging: *logging

  nginx:
    image: nginx:1.19.2-alpine
    restart: unless-stopped
    hostname: nginx
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "9000:9000"
      - "9001:9001"
    depends_on:
      - minio1
      - minio2
      - minio3
      - minio4

## By default, this config uses default local driver,
## For custom volumes replace with volume driver configuration.
volumes:
  data1-1:
  data1-2:
  data2-1:
  data2-2:
  data3-1:
  data3-2:
  data4-1:
  data4-2:
